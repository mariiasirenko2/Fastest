// Generated by view binder compiler. Do not edit!
package com.fastastapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fastastapp.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddNewTestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button attachQuestions;

  @NonNull
  public final Button attachStudents;

  @NonNull
  public final TextView fileNameQuestions;

  @NonNull
  public final TextView fileNameStudents;

  @NonNull
  public final TextView fileQuestions;

  @NonNull
  public final TextView fileStudents;

  @NonNull
  public final Button generateTest;

  @NonNull
  public final TextInputEditText inputTestName;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddNewTestBinding(@NonNull LinearLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button attachQuestions,
      @NonNull Button attachStudents, @NonNull TextView fileNameQuestions,
      @NonNull TextView fileNameStudents, @NonNull TextView fileQuestions,
      @NonNull TextView fileStudents, @NonNull Button generateTest,
      @NonNull TextInputEditText inputTestName, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.attachQuestions = attachQuestions;
    this.attachStudents = attachStudents;
    this.fileNameQuestions = fileNameQuestions;
    this.fileNameStudents = fileNameStudents;
    this.fileQuestions = fileQuestions;
    this.fileStudents = fileStudents;
    this.generateTest = generateTest;
    this.inputTestName = inputTestName;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddNewTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddNewTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_new_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddNewTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.attach_questions;
      Button attachQuestions = ViewBindings.findChildViewById(rootView, id);
      if (attachQuestions == null) {
        break missingId;
      }

      id = R.id.attach_students;
      Button attachStudents = ViewBindings.findChildViewById(rootView, id);
      if (attachStudents == null) {
        break missingId;
      }

      id = R.id.file_name_questions;
      TextView fileNameQuestions = ViewBindings.findChildViewById(rootView, id);
      if (fileNameQuestions == null) {
        break missingId;
      }

      id = R.id.file_name_students;
      TextView fileNameStudents = ViewBindings.findChildViewById(rootView, id);
      if (fileNameStudents == null) {
        break missingId;
      }

      id = R.id.file_Questions;
      TextView fileQuestions = ViewBindings.findChildViewById(rootView, id);
      if (fileQuestions == null) {
        break missingId;
      }

      id = R.id.file_Students;
      TextView fileStudents = ViewBindings.findChildViewById(rootView, id);
      if (fileStudents == null) {
        break missingId;
      }

      id = R.id.generateTest;
      Button generateTest = ViewBindings.findChildViewById(rootView, id);
      if (generateTest == null) {
        break missingId;
      }

      id = R.id.input_test_name;
      TextInputEditText inputTestName = ViewBindings.findChildViewById(rootView, id);
      if (inputTestName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddNewTestBinding((LinearLayout) rootView, appBarLayout, attachQuestions,
          attachStudents, fileNameQuestions, fileNameStudents, fileQuestions, fileStudents,
          generateTest, inputTestName, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
